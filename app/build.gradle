plugins {
    id 'com.android.application'
    id 'kotlin-android'
   // id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'com.google.firebase.crashlytics'
    id 'com.google.gms.google-services'

    id 'kotlinx-serialization'
  //  id 'stringfog'

}
if(JUNKCODE_ENABLE.toBoolean()){
    apply plugin: 'android-junk-code'
}
// apply from : '../resguard/junkcode.gradle'
// 导入RandomKeyGenerator类，如果使用HardCodeKeyGenerator，更换下类名
/*
import com.github.megatronking.stringfog.plugin.kg.RandomKeyGenerator
import com.github.megatronking.stringfog.plugin.StringFogMode

stringfog {
    // 必要：加解密库的实现类路径，需和上面配置的加解密算法库一致。
    implementation 'com.github.megatronking.stringfog.xor.StringFogImpl'
    // 可选：加密开关，默认开启。
    enable true
    // 可选：指定需加密的代码包路径，可配置多个，未指定将默认全部加密。
    fogPackages = ['com.quran.quranaudio','com.quranaudio']
    // 可选（3.0版本新增）：指定密钥生成器，默认使用长度8的随机密钥（每个字符串均有不同随机密钥）,
    // 也可以指定一个固定的密钥：HardCodeKeyGenerator("This is a key")
    kg new RandomKeyGenerator()
    // 可选（4.0版本新增）：用于控制字符串加密后在字节码中的存在形式, 默认为base64，
    // 也可以使用text或者bytes
    mode StringFogMode.bytes
}
*/

def secretsPropertiesFile = rootProject.file("secrets.properties")
def secretsProperties = new Properties()

if (secretsPropertiesFile.exists()) {
    secretsProperties.load(new FileInputStream(secretsPropertiesFile))
} else {
    secretsProperties.setProperty("LONDON_UNIFIED_TIMINGS_API_KEY", "${System.getenv('LONDON_UNIFIED_TIMINGS_API_KEY')}")
    secretsProperties.setProperty("CUSTOM_ADHAN_SOUNDS_FOLDER_NAME", "${System.getenv('CUSTOM_ADHAN_SOUNDS_FOLDER_NAME')}")
}

android {
    compileSdk 35
    ndkVersion "21.0.6113669"

    defaultConfig {
        applicationId "com.quran.quranaudio.online"
        minSdkVersion 26
        targetSdkVersion 35
        versionCode 14
        versionName "1.2.2"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "LONDON_UNIFIED_TIMINGS_API_KEY", secretsProperties['LONDON_UNIFIED_TIMINGS_API_KEY'])
        buildConfigField("String", "CUSTOM_ADHAN_SOUNDS_FOLDER_NAME", secretsProperties['CUSTOM_ADHAN_SOUNDS_FOLDER_NAME'])


        // Set BuildConfig.DEVELOPER_MACHINE_IP to the IP address of any interface.
        def ipList = getLocalIPv4()
        buildConfigField("String", "DEVELOPER_MACHINE_IP", ipList.empty ? '""' : '"' + ipList.get(0) + '"')

    }

    kapt {
        javacOptions {
            option("-Xmaxerrs", 500)
            option("-Xlint:deprecation", true)
            option("-Xlint:unchecked", true)
        }
        arguments {
            arg("plugin", "org.jetbrains.kotlin.kapt3:kotlin-allopen")
            arg("plugin", "org.jetbrains.kotlin.kapt3:kotlin-noarg")
        }
       // useBuildCache = true
    }


    signingConfigs {

        release {
            storeFile file("quran_keystore")//hashcode 1961951595
            keyAlias "key0"
            storePassword "Huwei123"
            keyPassword "Huwei123"
        }
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
    buildTypes {

        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false

            resValue "string", "cleartextTrafficPermitted", "true"
        }

        release {
            minifyEnabled true
            debuggable false
            //proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // shrinkResources true
            resValue "string", "cleartextTrafficPermitted", "false"

            signingConfig signingConfigs.release
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
    }
    bundle {
        language {
            enableSplit false //语言不分包
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true

        // Fix OutOfMemory errors
        unitTests {
            all {
                maxParallelForks = 2
                forkEvery = 80 // means only 80 tests will get ran in a single process,
                // so they never hit the heap size.
                maxHeapSize = "2048m"
                minHeapSize = "1024m"
            }
        }
    }

    bundle {
        language {
            enableSplit = false
        }
    }


    packagingOptions {
        resources {
            excludes += ['META-INF/atomicfu.kotlin_module']
        }
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }



    buildFeatures {
        viewBinding true
        dataBinding true
    }
    namespace 'com.quran.quranaudio.online'
}

dependencies {
    implementation project(path: ':adlib')
    implementation project(path: ':quiz')


    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation files('libs/muslimdata-0.6.aar')
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    implementation(platform('org.jetbrains.kotlin:kotlin-bom:1.8.10'))
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    //Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'androidx.work:work-testing:2.7.1'
    testImplementation 'org.mockito:mockito-core:4.5.1'
    testImplementation 'org.robolectric:robolectric:4.8.1'
    testImplementation 'org.threeten:threetenbp:1.6.0'
    testImplementation 'com.squareup.assertj:assertj-android:1.2.0'

    def room_version ="2.4.3"
    implementation 'androidx.room:room-runtime:2.4.3'
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"


    //coin
    implementation("io.coil-kt:coil:2.2.2")
    implementation 'org.slf4j:slf4j-simple:2.0.4'

    //implementation group: 'com.github.seratch', name: 'java-time-backport', version: '1.0.0'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.6"
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.6'

    // Gson
    implementation "com.google.code.gson:gson:2.10"



    //Dialog
    implementation 'com.afollestad.material-dialogs:input:3.3.0'
    implementation 'com.afollestad.material-dialogs:core:3.3.0'

    def lifecycle_version = "2.5.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"


    implementation 'com.irozon.sneaker:sneaker:2.0.0'
    implementation 'uk.co.markormesher:android-fab:2.5.0'
    implementation 'com.github.quentin7b:android-location-tracker:4.0'
    implementation "com.github.skydoves:transformationlayout:1.1.1"
    implementation 'com.github.rbro112:Android-Indefinite-Pager-Indicator:1.3'
    implementation 'com.tbuonomo.andrui:viewpagerdotsindicator:4.1.2'
    implementation 'com.elconfidencial.bubbleshowcase:bubbleshowcase:1.3.1'
    //implementation 'com.google.android.play:core:1.10.3'
    implementation 'com.google.android.play:app-update:2.1.0'
    implementation 'com.google.android.play:review:2.0.1'

    implementation "androidx.activity:activity-ktx:1.6.1"
    implementation 'com.github.GwonHyeok:StickySwitch:0.0.16'
    //implementation 'dev.kosrat.muslimdata:0.6'
    implementation 'com.github.ahmedeltaher:Azan:3.0'
    implementation "com.github.ssseasonnn:DownloadX:1.0.2"
    implementation 'com.github.mumayank:AirLocation:2.5.2'
    implementation "androidx.work:work-runtime-ktx:2.7.1"
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation 'com.orhanobut:logger:2.2.0'
    implementation 'com.github.judemanutd:autostarter:1.1.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation "androidx.gridlayout:gridlayout:1.0.0"
    implementation 'com.github.mohammadatif:Animatoo:master'
    implementation 'com.github.ybq:Android-SpinKit:1.4.0'
    implementation 'com.github.kayvannj:PermissionUtils:1.0.9'


    //Google map utility
    implementation 'com.google.maps.android:android-maps-utils:2.4.0'
    implementation 'com.google.maps.android:maps-utils-ktx:3.4.0'
    implementation 'com.google.maps.android:maps-ktx:3.4.0'

    //Google Direction API
    implementation 'com.google.maps:google-maps-services:2.1.2'

    // Ad Networks
    implementation 'com.facebook.android:audience-network-sdk:5.11.0'

    //Firebase Auth
    implementation "com.google.firebase:firebase-auth:21.1.0"
    implementation "com.google.android.gms:play-services-auth:20.4.0"
    implementation 'com.google.firebase:firebase-analytics-ktx:21.2.0'
    implementation 'com.google.firebase:firebase-crashlytics:18.3.2'
    implementation 'com.google.firebase:firebase-ads:21.4.0'
    implementation 'com.google.firebase:firebase-messaging:23.1.1'
    implementation 'com.google.firebase:firebase-analytics:21.2.0'
    implementation 'com.google.firebase:firebase-firestore:24.4.1'
    implementation 'com.google.firebase:firebase-database-ktx:20.1.0'
    //ExoPLayer
    implementation 'com.google.android.exoplayer:exoplayer:2.18.7'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'

    //PrayerTimes
    androidTestImplementation 'androidx.test.espresso:espresso-core:{strictly 3.1.0-alpha3}'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'androidx.core:core-splashscreen:1.0.0'


    //Hadith
    implementation 'org.json:json:20220924'
    implementation 'org.apache.commons:commons-io:1.3.2'
    implementation 'com.makeramen:roundedimageview:2.3.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation "com.airbnb.android:lottie:5.2.0"

    //Prayertimes
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation "androidx.work:work-rxjava3:2.7.1"
    implementation 'androidx.media:media:1.6.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    //implementation 'androidx.core:core-splashscreen:1.0.0'
    implementation group: 'com.grack', name: 'nanojson', version: '1.6'
    implementation 'com.google.dagger:dagger:2.33'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.33'
    kapt 'com.google.dagger:dagger-compiler:2.33'
    implementation "io.reactivex.rxjava3:rxjava:3.0.7"
    implementation "io.reactivex.rxjava3:rxandroid:3.0.0"
    implementation 'org.apache.commons:commons-lang3:3.10'
    implementation 'com.mikhaellopez:circularprogressbar:3.0.3'
    implementation 'com.faltenreich:skeletonlayout:4.0.0'
    implementation 'com.evrencoskun.library:tableview:0.8.9.4'
    implementation 'com.takisoft.preferencex:preferencex:1.1.0'
    implementation 'com.github.Cutta:GifView:1.4'
    implementation 'com.github.travijuu:numberpicker:1.0.7'
    implementation 'com.github.kizitonwose:CalendarView:1.0.4'
    implementation 'org.greenrobot:eventbus:3.2.0'
    implementation 'com.github.AppIntro:AppIntro:6.2.0'
    implementation 'cat.ereza:customactivityoncrash:2.3.0'
    implementation 'com.yarolegovich:lovely-dialog:1.1.1'
    implementation 'com.batoulapps.adhan:adhan:1.2.1'
    implementation 'com.aminography:primecalendar:1.7.0'
    implementation 'com.github.luisvasquez:sTooltip:1.5.1'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
  //  implementation 'com.github.ShaheenDevelopers:MultiAdsSdk:1.0.0'
  //  implementation 'com.github.solodroidx:multi-ads-sdk:1.0.9'



    implementation 'com.github.douglasjunior:android-simple-tooltip:1.1.0'
    implementation 'com.readystatesoftware.sqliteasset:sqliteassethelper:2.0.1'

    implementation project(path: ':peacedesign')
    implementation project(path: ':shaheendevelopersAds_SDK')

    //Quran_Module

    implementation libs.androidx.coreKtx
    implementation libs.lifecycle.runtime
    implementation libs.lifecycle.service
    implementation libs.androidx.annotation
    implementation libs.androidx.legacySupport
    implementation libs.androidx.appcompat
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.webkit
    implementation libs.androidx.media
    implementation libs.androidx.browser

    implementation libs.exoplayerCore
    implementation libs.exoplayerUI
    implementation libs.extensionMediasession

    coreLibraryDesugaring libs.desugaring
    implementation libs.material
    implementation libs.apache.commons
    implementation libs.guava
    implementation libs.viewbinding

    /* kotlinx serialization */
    implementation libs.retrofit
    implementation libs.kotlinxSerialization
    implementation libs.kotlinxRetrofit

    /* SmoothRefreshLayout */
    implementation libs.srlCore
    implementation libs.srlExtClassics
    implementation libs.srlExtMaterial
    implementation libs.srlExtDynamicRebound
    implementation libs.srlExtHorizontal
    implementation libs.srlExtTwoLevel
    implementation libs.srlExtUtil

    //Quran_Module*

    implementation 'androidx.multidex:multidex:2.0.1'
  //  implementation 'com.github.megatronking.stringfog:xor:5.0.0'
}

import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

tasks.withType(Test) {
    testLogging {
        events TestLogEvent.FAILED,
                TestLogEvent.SKIPPED,
                TestLogEvent.STANDARD_ERROR,
                TestLogEvent.STANDARD_OUT
        exceptionFormat TestExceptionFormat.FULL
        showCauses true
        showExceptions true
        showStackTraces true
        showStandardStreams true
    }
}


//return all v4 addresses
static def getLocalIPv4() {
    def ip4s = []
    NetworkInterface.getNetworkInterfaces()
            .findAll { it.isUp() && !it.isLoopback() && !it.isVirtual() }
            .each {
                it.getInetAddresses()
                        .findAll { !it.isLoopbackAddress() && it instanceof Inet4Address }
                        .each { ip4s << it.getHostAddress() }
            }
    return ip4s
}

apply from: "junkcode.gradle"